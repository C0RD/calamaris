Calamaris
Version 2

What is it?
-----------

Calamaris is a Perl script, which was first intended as demo for a statistical
software for Squid.  I started it at 13 January 1997 (Version 1.1) as a
rewrite of my old Squid-Analysis-Script weekly.pl (which was in German
language). I announced it (Version 1.16) to the public at 28 Feb 1997.  (see
http://squid.nlanr.net/Mail-Archive/squid-users/9702/archive/0555.html for the
Original-Announcement) Since then it is used by people all around the world,
and i decided to build a new improved version of it.  Calamaris V2 is a nearly
complete rewrite, with changed and more reports.

It works with native logfiles from Squid V1.1.x and later.

There is also the possibility to parse logfiles from NetCache. (but see 'Bugs
and Shortcomings' on this.)


Where to get it?
----------------

The Calamaris-Home-page is located at http://Calamaris.Cord.de/ 
(If you use an old browser which does not send a 'Host:'-Header in its request
you have to use http://Cord.de/homepages/cord/tools/squid/calamaris/)

There is also an Announcement-Mailing-list. To subscribe send mail with
'subscribe' in the Mail-Body to Calamaris-announce-request@Cord.de.
Subscribers will get a mail on every new release, including a list of the
changes. --> low traffic.

Kevin Way (kevin@research-inc.com) has build rpms of Calamaris, which can be
found at http://overtone.org/rpms/

Philipp Frauenfelder (pfrauenf@debian.org) has build a Debian Package, which
can be found in the slink (Debian 2.1) tree.


How to use it?
--------------

* You'll need Perl Version 5 (see http://www.Perl.com/). Calamaris is reported
  to work with Perl 5.001 (maybe you have to remove the '-w' from the first
  line and comment out the 'use vars'-line), but it is highly recommended
  (especially for security of your computer) that you use a recent version
  (>=5.005_02) of it.

* You'll also need Squid (see http://squid.nlanr.net/) Version 1.1.x or later
  (or logfiles derived from it). It has to produce the 'Native logfile format'
  (which is the default since Version 1.1.x). If Calamaris can't parse the
  access.log, check your logfile format.  It is explained in the Squid FAQ
  which can be reached via the Address above.

* Put Calamaris itself into a warm, dry place on your computer (i.e. into the
  Squid-bin-directory, or /usr/local/bin/). Maybe (if your Perl isn't located
  at /usr/bin/perl) you'll have to change the first line of Calamaris to point
  to your copy of Perl.

* There is also a manpage for Calamaris. You should copy it to an appropriate
  place like /usr/local/man/man1, where your man(1) can find it.

* Use it! 

  'cat access.log.1 access.log.0 | calamaris'

  Calamaris by default generates by a brief ASCII report of incoming and
  outgoing requests.

  NOTE: If you pipe more than one log-file into Calamaris, make sure that they
    are chronologically ordered (oldest file first), else some reports can
    return wrong values.

  You can alter Calamaris' behaviour with switches.  There are four groups of
  switches:

  Reports-switches:

    without these switches you get a brief report of incoming and outgoing
    requests.

    -a	    all. switch all available reports on. This is equivalent to 
	    -d 20 -p -P 60 -r -1 -s -t 20

    -d n    domain-report. It switches the top-level- and the
	    second-level-domainreport on. The data is derived from the URL.
	    The output is limited by the number n. (-1 is unlimited)

    -p	    peak-report.  Measure the peaks of the Squid usage in requests per
	    second, minute and hour. It reports peaks for TCP, UDP and ALL
	    requests. This option makes Calamaris 30% or more slower.

    -P n    performance-report.  It shows the throughput of TCP-Requests for
	    every n minutes.

    -r n    requester-report. It switches the UDP- and TCP-Requester-Reports
	    on. The output is limited by the number n. (-1 is unlimited)

    -s	    status-report. This switch alters the default behaviour of
	    Calamaris and makes the status-reports more verbose.

    -t n    type-report. It switches the content-type- and the
	    file-extension-report on. The output is limited by the number n.
	    (-1 is unlimited)

  Output-switches:

    without these switches you'll get a plain ASCII output with 80 chars
    width.

    -m	    mail-output. It adds a Subject-Header to the beginning of the
	    report, so you can pipe the output into a simple mail-program.

    -w      web-report. All output is given in HTML format with HTML tables.
	    Combined with the -m-option you can also send mail in HTML format.
	    *urgs*!

  Caching-switches:

    -i file input-file. You can reuse cache-file generated with the -o-option,
	    to add old data to a new report. You can also add many cache-files
	    by separating them with a ':'.

	    NOTE: If you use more than one cache-file, make sure that they are
	      chronological ordered (oldest file first), else some reports can
	      return wrong values.

    -o file output-file. The file defined contains the processed data. You can
	    reuse this file in a later run with the -i-option. The output-file
	    can be the same as a input-file. It will be overwritten with the
	    new data. The cached data is altered by the report-switches above.

	    NOTE: It is not recommended to change the switches between runs
	      if you use cache-files, else you can get some strange
	      measurements.

  Misc-switches:

    -b n    benchmark. a switch for the impatient. ;-) It prints a # for 
	    every n parsed lines.

    -H name Host-name. This names the output on the Title/Subject of the
	    output. If set to 'lookup' Calamaris looks up the host-name of the
	    current machine and puts that name in.

    -n	    no lookup. Switch the IP-number-lookup for the requesters off. 

    -O	    order. Normally Calamaris sorts all reports by the number of the
	    requests, with this switch you can change the sort order for all 
	    reports to request-size.

    -u	    user. Switches the usage of eventually available ident-information
	    for requester-reports on. WARNING: This breaks the privacy of your
	    users!

    -z	    zero. Switch reading of the Standard-Input off. You can use this
	    to merge many cache-files to one (see -i and -o) or to generate a
	    report out of a cache-file.

    -c	    copyright. Prints out the copyright of Calamaris.

    -h	    help. Prints a brief description of command-line-options.


  You should also take a look at the EXAMPLES-File, for
  'Real-Life'-usage-examples of Calamaris.


Are there known bugs or other problems?
---------------------------------------

* I fixed a bug regarding caching of Performance-Data. This breaks old
  Calamaris-Cache-Files... I put a workaround in, which allows to parse old
  and new cachefiles. But you will loose the 'Cache-Hits'-value from old files
  in the Performance-Report.  It is set to '-' in the output.

* It is possible that you encounter some problems, if you use Squid
  V1.2.x/V2.x with some of the new features enabled. If you find problems,
  please report them to Calamaris-bug@Cord.de. I'll try to fix them ASAP.  I'm
  especially interested how Calamaris works with Squids CARP-Support. So if
  you use it that way, please send a mail to Calamaris@Cord.de, even if it
  works without problem. Thank You.

* If you parse NetCache logfiles with Calamaris, it seems that you can run
  into trouble. I've looked for information on the logfile-format from the
  vendor, but it seems that they don't give info to people who don't want to
  tell them their name and address.  So, if someone can provide me with that
  info, I'll try to put it into Calamaris, if not... (I've seen that NetCache
  produces broken logfiles with different counts of fields, is that a buggy
  version?)

* If you want to parse more than one logfile (i.e. from the 'logfilerotate')
  or want to use more than one input-cache-file you have to put them in
  chronological sorted order (oldest first), else you get wrong peak values.
  (Is this something that i should fix? Don't think so...)

* However: If you use the caching function the peak-values can be wrong. 

* Squid doesn't log outgoing UDP-Requests, so i can't put them into the
  statistics without parsing squid.conf and the cache.log-file. (Javier Puche
  (Javier.Puche@rediris.es) asked for this), but i don't think that i should
  put this into Calamaris...  (Check last point of 'Bugs and shortcomings'.)

* It is written in Perl. Yea, Perl is a great language for something like this
  (also it is the only one I'm able to write something like this in).
  Calamaris was first intended as demo for what i wanted from a statistical
  software. (OK, it is fun to write it, and it is even more fun to recognize
  that many people use the script). For my Caches with about 150MB logfile per
  week it is OK, but for those people on a heavy loaded Parent-cache it is
  simply to slow.

* Hmmm, while looking through those many different reports i generate, i think
  that i generate more than anybody ever wants to now about squid :-) So i
  added switches, so everybody can switch on or off the reports wanted. But
  this is also a speed disadvantage because of the many checks if set or
  not...


What will happen next?
----------------------

I think that Calamaris v2 is now finished. (except for bugs, that maybe were
not found yet.)

But if you have an idea what is still missing in a software for parsing
proxy logfiles, let me know. --> Calamaris@Cord.de. I'll will build it in, or
add it to the wish-list below :-)

* rewrite peak-measurement. The current calculation method is very time
  intensive and slows down Calamaris by 30 or more percent, but it is faster
  than the old way. However: i'm not really satisfied with it. So if someone
  has an idea how to build an efficient AND fast method to work it out... let
  me know!

* try 'use integer'. This can result in a less memory-hungry, but faster
  version of Calamaris. (idea by Gerold Meerkoetter)

* build graphics (hope i remember who suggested this first, the mail must be
  somewhere in my work-mailbox ;-) (This is a thing for Calamaris v3, if i
  ever going to write it. there are nice gd-libs in Perl ;-)

* add real NetCache-Support. The NetCache-Support is rudimentary working, but
  is only in some kind of alpha-state. see above.

* add parsing of 'Common Logfileformat'. I don't think that this makes sense,
  because Common Log is missing some very important data i.e. the Requesttime.
  (So I won't build something like that in.) If you're still stuck with that
  format, i recommend the 'analog'-software by Steven Turner. Other way round:
  change logging to 'native' and convert it to 'common'. There is software for
  that available, i.e. my shrimp.pl.

* make Calamaris faster. see above. If someone wants to rewrite Calamaris in a
  faster language: Feel Free! (But respect the GNU-License) It would be nice
  if you drop me a line about it, I'll mention it below. And please please
  please don't use the name 'Calamaris' for it without asking me!
  

Is there anything else?
-----------------------

Ernst Heiri has build a spin-off of my Calamaris V1, which can be found
*where?*

There is also a C++-port of Ernst Heiri's Calamaris available. It is
(according to the author Jens-S. Voeckler (voeckler@rvs.uni-hannover.de)) five
times faster than the Perl-variant.  check
http://statistics.www-cache.dfn.de/Projects/seafood/ for this.

more Squid-logfile-Analysers can be found via the Squid-Home-page at
http://squid.nlanr.net/

A description of the Squid-Logfiles can be found at
http://squid.nlanr.net/Squid/FAQ/FAQ-6.html.

Thank You!
----------

* The developers and contributors of Squid.
* The developers and contributors of Perl.
* The contributors, feature requesters and bug-reporters of Calamaris.
* Gerold 'Nimm Perl' Meerkoetter.


Not happy yet?
--------------

Drop me a line to Calamaris@Cord.de and tell me what is missing or wrong or
not clear or whatever. You are welcome :-)


Version of the README
---------------------

$Id: README,v 2.15 1999-01-22 21:06:57 cord Exp $
